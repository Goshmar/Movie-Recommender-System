# -*- coding: utf-8 -*-
"""2-SVD-implementation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L1ut4Eo52vkSBmSuPQPkwhbPcDyQ6idY
"""

import os

repo_dir = "Movie-Recommender-System"

if os.path.exists(repo_dir):
    print(f"{repo_dir} already exists. Removing it...\n")
    !rm -r {repo_dir}

# Clone the repository from GitHub
!git clone https://github.com/Goshmar/Movie-Recommender-System

import requests
import zipfile
import pandas as pd
import numpy as np

# Define the paths
zip_file_path = "/content/Movie-Recommender-System/data/raw/ml-100k.zip"

with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall(".")

# ZIP cleaning up
os.remove(zip_file_path)

from scipy.sparse import load_npz

# Download data
data_matrix = load_npz('/content/Movie-Recommender-System/data/interim/data_matrix.npz')
item_info = pd.read_csv('/content/ml-100k/u.item', sep='|', encoding='latin-1', names=['movie_id', 'movie_title', 'release_date', 'video_release_date', 'IMDB_URL', 'unknown', 'Action', 'Adventure', 'Animation', 'Children', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Fantasy', 'Film-Noir', 'Horror', 'Musical', 'Mystery', 'Romance', 'Sci-Fi', 'Thriller', 'War', 'Western'])

from scipy.sparse.linalg import svds
U, S, Vt = svds(data_matrix, k=50, return_singular_vectors='vh')

# Let's take sub-query for movie title for finding input index
query = 'Lord'

matching_rows = item_info.loc[item_info.movie_title.str.contains(query, flags=2)]

# Check if there are any matching rows
matching_index = matching_rows.index[0] if not matching_rows.empty else None

print("First matching index:", matching_index)
matching_rows

item_info.iloc[np.argsort(-Vt.T @ Vt[:, matching_index])[1:6]][['movie_id', 'movie_title']]
